#%RAML 1.0
title: MFA API
version: v1
baseUri: https://api.samplehost.com
protocols: [HTTPS]

/api-key:
  description: |
    Create a new API Key for this API. This endpoint will send an email with a
    new, unique API Key. You must then make a separate call to activate that API
    Key. Protect your API Key as a secret.
  post:
    headers:
      x-api-key:
        description: The AWS API Gateway api key's value (obtained from AWS).
        required: true
    body:
      application/json:
        properties:
          email:
            type: string
            required: true
        example: |
          {
            "email": "john_smith@example.com"
          }
    responses:
      204:
        description: |
          The API Key was successfully created, and an email will be sent to the
          given email address with the API Key's value.
      400:
        description: |
          The request was unacceptable for some reason. See the error message.
      401:
      403:
        description: |
          No valid API Gateway api key was provided (not to be confused with
          our internal API Keys).
  /activate:
    description: |
      Activate a recently-created API Key. Returns the API Secret needed for
      further calls. This call can only be made once per API Key, so make sure you
      save the API Secret somewhere safe.
    post:
      headers:
        x-api-key:
          description: The AWS API Gateway api key's value (obtained from AWS).
          required: true
      body:
        application/json:
          properties:
            email:
              type: string
              required: true
            apiKey:
              type: string
              required: true
          example: |
            {
              "email": "john_smith@example.com",
              "apiKey": "0123456789abcdef0123456789abcdef01234567"
            }
      responses:
        200:
          body:
            application/json:
              properties:
                apiSecret:
                  type: string
              example: |
                {
                  "apiSecret": "ABCDEFGHIJKLMNOPQRSTUVWXYZ+abcdefgh/ijklmno="
                }
        401:
        403:
          description: |
            No valid API Gateway api key was provided (not to be confused with
            our internal API Keys).
        404:
          description: |
            No such API key was found with that email address.

/totp:
  description: |
    Create a new TOTP account. This will return a UUID for that account, along
    with a TOTP key and barcode for the end-user to type in or scan in order to
    add an account to their TOTP-compatible smartphone app.
  post:
    headers:
      X-MFA-ApiKey:
        description: API Key
        required: true
      X-MFA-ApiSecret:
        description: API Secret
        required: true
    body:
      application/json:
        properties:
          issuer:
            description: |
              The name of the service/website for which the user is setting up
              this TOTP account.
            type: string
            required: false
          label:
            description: |
              A name for the user's account (such as their username).
            type: string
            required: false
        example: |
          {
            "issuer": "Acme",
            "label": "john_smith@example.com"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "uuid": "aaaaaaaa-1111-aaaa-1111-aaaaaaaaaaaa",
                "totpKey": "aaaa bbbb cccc dddd",
                "imageUrl": "data:image/gif;base64,...",
                "otpAuthUrl": "URL for use with the Google Authenticator app"
              }
      401:
  /{uuid}:
    uriParameters:
      uuid:
        description: The TOTP account's UUID.
        type: string
        required: true
    delete:
      headers:
        X-MFA-ApiKey:
          description: API Key
          required: true
        X-MFA-ApiSecret:
          description: API Secret
          required: true
      responses:
        204:
        401:
        404:
        500:
    /validate:
      post:
        headers:
          X-MFA-ApiKey:
            description: API Key
            required: true
          X-MFA-ApiSecret:
            description: API Secret
            required: true
        body:
          application/json:
            properties:
              code:
                type: string
            example: |
              {"code": "012345"}
        responses:
          200:
            description: |
              The given TOTP code was valid.
          400:
            description: |
              The request body was invalid, such as if no `code` value was found.
          401:
            description: |
              The given TOTP code was wrong.
          404:

/u2f:
  description: |
    Create a new U2F configuration. This is the start of the FIDO U2F
    Registration process.
  post:
    headers:
      X-MFA-ApiKey:
        description: API Key
        required: true
      X-MFA-ApiSecret:
        description: API Secret
        required: true
    body:
      application/json:
        properties:
          appiId: string
    responses:
      200:
        body:
          application/json:
            properties:
              uuid: string
              challenge:
                description: Object to pass through to browsers u2f.register()
                type: object
      400:
      401:
  /{uuid}:
    put:
      description: |
        Complete registration and store keyHandle, publicKey, etc.
      headers:
        X-MFA-ApiKey:
          description: API Key
          required: true
        X-MFA-ApiSecret:
          description: API Secret
          required: true
      body:
        application/json:
          properties:
            signResult:
              description: Object generated by U2F device and passed as signResult to API
              type: object
      responses:
        204:
        400:
        401:
        404:
    delete:
      description: |
        Delete a U2F configuration
      headers:
        X-MFA-ApiKey:
          description: API Key
          required: true
        X-MFA-ApiSecret:
          description: API Secret
          required: true
      responses:
        204:
        400:
        401:
        404:
    /auth:
      post:
        description: |
          Start a new authentication sequence
        headers:
          X-MFA-ApiKey:
            description: API Key
            required: true
          X-MFA-ApiSecret:
            description: API Secret
            required: true
        responses:
          200:
            body:
              application/json:
                properties:
                  version: string
                  appId: string
                  challenge: string
                  keyHandle: string
          400:
          401:
          404:
      put:
        description: |
          Verify signature from U2F device to complete authentication
        headers:
          X-MFA-ApiKey:
            description: API Key
            required: true
          X-MFA-ApiSecret:
            description: API Secret
            required: true
        body:
          application/json:
            properties:
              signResult: string
        responses:
          204:
          400:
          401:
          404:
