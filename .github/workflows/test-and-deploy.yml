name: Test and Deploy

on:
  push:
    branches: ["**"]
    paths-ignore:
    - 'terraform/**'

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: ${{ fromJSON(vars.DEFAULT_JOB_TIMEOUT_MINUTES) }}
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
    - name: Test
      run: |  
        npm install --no-fund -g serverless@3.25
        npm ci --no-fund
        npm test
        serverless --version
        serverless info --conceal

  deploy_us_east_1:
    runs-on: ubuntu-latest
    timeout-minutes: ${{ fromJSON(vars.DEFAULT_JOB_TIMEOUT_MINUTES) }}
    needs: test
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
    - if: github.ref_name == 'develop'
      run: serverless deploy --verbose --stage dev --region us-east-1
    - if: github.ref_name == 'main'
      run: serverless deploy --verbose --stage prod --region us-east-1

  deploy_us_west_2:
    runs-on: ubuntu-latest
    timeout-minutes: ${{ fromJSON(vars.DEFAULT_JOB_TIMEOUT_MINUTES) }}
    needs: test
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
    - if: github.ref_name == 'develop'
      run: serverless deploy --verbose --stage dev --region us-west-2
    - if: github.ref_name == 'main'
      run: serverless deploy --verbose --stage prod --region us-west-2
